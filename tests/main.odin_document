[
	nil,
	newline,
	"package",
	" ",
	"odinfmt_test",
	nil,
	nil,
	newline,
	group=""([
		group=""([
			nil,
			nil,
			nil,
			"assignments",
			" ",
			":",
			":",
		]),
		" ",
		group=""([
			nil,
			group=""([
				"proc",
				"(",
				indent(
					[
						"",
						nil,
					]
				),
				"",
				")",
			]),
			" ",
			group=""([
				nil,
				newline,
				nil,
				"{",
				indent(
					[
						nil,
						nil,
						nil,
						newline,
						group=""(indent(
							[
								nil,
								nil,
								nil,
								"a",
								",",
								" ",
								nil,
								nil,
								"b",
								",",
								" ",
								nil,
								nil,
								"c",
								",",
								" ",
								nil,
								nil,
								"d",
								",",
								" ",
								nil,
								nil,
								"e",
								",",
								" ",
								nil,
								nil,
								"f",
								",",
								" ",
								nil,
								nil,
								"res",
								" ",
								":",
								"=",
								" ",
								group=""([
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
									",",
									" ",
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
									",",
									" ",
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
									",",
									" ",
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
									",",
									" ",
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
									",",
									" ",
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
									",",
									" ",
									nil,
									nil,
									"&",
									nil,
									group=""([
										nil,
										nil,
										nil,
										"big",
										nil,
										".",
										nil,
										nil,
										"Int",
										"{",
										indent(
											[
												"",
												nil,
											]
										),
										if_break => ",",
										"",
										"}",
									]),
								]),
							]
						)),
						nil,
					]
				),
				nil,
				newline,
				"}",
			]),
		]),
	]),
	nil,
	nil,
	newline,
	group=""([
		group=""([
			nil,
			nil,
			nil,
			"ternary_when_assignment",
			" ",
			":",
			":",
		]),
		" ",
		group=""([
			nil,
			group=""([
				"proc",
				"(",
				indent(
					[
						"",
						nil,
					]
				),
				"",
				")",
			]),
			" ",
			group=""([
				nil,
				newline,
				nil,
				"{",
				indent(
					[
						nil,
						nil,
						nil,
						newline,
						group=""(indent(
							[
								nil,
								nil,
								nil,
								"a",
								" ",
								":",
								"=",
								" ",
								group=""([
									nil,
									nil,
									nil,
									"WGL_CONTEXT_FLAGS_ARB",
									" ",
									nil,
									"when",
									" ",
									nil,
									nil,
									"ODIN_DEBUG",
									" ",
									nil,
									"else",
									" ",
									nil,
									nil,
									"0",
								]),
							]
						)),
						nil,
						nil,
						newline,
						group=""(indent(
							[
								nil,
								nil,
								nil,
								"b",
								" ",
								":",
								"=",
								" ",
								group=""([
									nil,
									group=""([
										nil,
										nil,
										"ODIN_DEBUG",
									]),
									" ",
									nil,
									"?",
									" ",
									group=""([
										nil,
										nil,
										"WGL_CONTEXT_FLAGS_ARB",
									]),
									" ",
									nil,
									":",
									" ",
									group=""([
										nil,
										nil,
										"0",
									]),
								]),
							]
						)),
						nil,
					]
				),
				nil,
				newline,
				"}",
			]),
		]),
	]),
	newline,
]